name: Force Update SDK

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  force-update-sdk:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          version: "^9.15.4"
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
          registry-url: 'https://registry.npmjs.org/'

      - name: install & build
        env:
          S21_USERNAME: ${{ secrets.S21_USERNAME }}
          S21_PASSWORD: ${{ secrets.S21_PASSWORD }}
        run: |
          pnpm install --frozen-lockfile
          pnpm build

      - name: Run diff
        id: diff
        run: |
          echo "changed=true" >> $GITHUB_OUTPUT;
          echo "version_full=$(pnpm s21i static -n -s PRODUCT_VERSION)" >> $GITHUB_OUTPUT;
          echo "version=$(pnpm s21i static -n -s PRODUCT_VERSION | grep -P '(?<=^r__)\d+\.\d+\.\d+' -o)" >> $GITHUB_OUTPUT;

      - name: Release tag
        if: steps.diff.outputs.changed == 'true'
        env:
          VERSION: ${{ steps.diff.outputs.version }}
          VERSION_FULL: ${{ steps.diff.outputs.version_full }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          git config user.name s21toolkit
          git config user.email s21toolkit@github.com

          CURRENT_VERSION=$(node -p 'require("./package.json").version.split("-").at(0)')

          if [ $CURRENT_VERSION = $VERSION ]; then
            pnpm version prerelease --no-git-tag-version
          else
            pnpm version "$VERSION-build.0" --no-git-tag-version
          fi

          NEW_VERSION=$(node -p 'require("./package.json").version')

          git add ./src
          git commit -m "feat(schema): $NEW_VERSION"

          git add package.json
          git commit -m "chore(release): $NEW_VERSION"
          git tag "v$NEW_VERSION"
          git push && git push --tags

      - name: Release npm
        if: steps.diff.outputs.changed == 'true'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          S21_USERNAME: ${{ secrets.S21_USERNAME }}
          S21_PASSWORD: ${{ secrets.S21_PASSWORD }}
        run: |
          pnpm publish --access public --no-git-checks
